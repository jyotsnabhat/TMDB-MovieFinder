{"ast":null,"code":"import _slicedToArray from \"/Users/jyotsna/WebstormProjects/TMDB-MovieFinder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jyotsna/WebstormProjects/TMDB-MovieFinder/src/components/movies/Lyrics.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport Spinner from \"../layout/Spinner\";\nimport Moment from \"react-moment\";\nimport moment from \"moment-duration-format\";\n\nconst Lyrics = props => {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        movie = _useState2[0],\n        setMovie = _useState2[1];\n\n  const match = props.match;\n  useEffect(() => {\n    axios.get(\"https://api.themoviedb.org/3/movie/\".concat(match.params.id, \"?api_key=\").concat(process.env.REACT_APP_POPULAR_KEY)).then(res => {\n      let movie = res.data;\n      console.log(movie);\n      setMovie({\n        movie\n      });\n    }).catch(err => console.log(err));\n  }, [props.match.params.id]);\n\n  if (movie === undefined || Object.keys(movie).length === 0) {\n    return React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(React.Fragment, null, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"bg-image w-100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://image.tmdb.org/t/p/w1280\" + movie.movie.backdrop_path,\n      alt: \"could not be loaded\",\n      className: \"img-responsive\",\n      width: \"100%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      className: \"mb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-arrow-left text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://image.tmdb.org/t/p/w185\" + movie.movie.poster_path,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, movie.movie.original_title), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xs-6 overview mx-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Moment, {\n      format: \"YYYY\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, movie.movie.release_date)), React.createElement(\"span\", {\n      className: \"overview mx-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"\\xB7\"), React.createElement(\"div\", {\n      className: \"col-xs-6 overview mx-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, movie.movie.popularity, \" % User Score\")), React.createElement(\"div\", {\n      className: \"col-xs-6 overview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, movie.movie.runtime))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"font-weight-bold my-3 titles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Overview\"), React.createElement(\"div\", {\n      className: \"overview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, movie.movie.overview))));\n  }\n};\n\nexport default Lyrics;","map":{"version":3,"sources":["/Users/jyotsna/WebstormProjects/TMDB-MovieFinder/src/components/movies/Lyrics.js"],"names":["React","useState","useEffect","axios","Link","Spinner","Moment","moment","Lyrics","props","movie","setMovie","match","get","params","id","process","env","REACT_APP_POPULAR_KEY","then","res","data","console","log","catch","err","undefined","Object","keys","length","backdrop_path","poster_path","original_title","release_date","popularity","runtime","overview"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport axios from \"axios\";\nimport {Link} from \"react-router-dom\";\nimport Spinner from \"../layout/Spinner\";\nimport Moment from \"react-moment\";\nimport moment from \"moment-duration-format\";\n\nconst Lyrics = props => {\n    const [movie, setMovie] = useState({});\n    const {match} = props;\n\n\n    useEffect(() => {\n        axios\n            .get(\n                `https://api.themoviedb.org/3/movie/${match.params.id}?api_key=${process.env.REACT_APP_POPULAR_KEY}`\n            )\n            .then(res => {\n                let movie = res.data;\n                console.log(movie);\n                setMovie({movie});\n            })\n            .catch(err => console.log(err));\n    }, [props.match.params.id]);\n\n    if (movie === undefined || Object.keys(movie).length === 0) {\n        return <Spinner/>;\n    } else {\n        return (\n\n            <>\n\n                <header>\n                    <div className=\"row\">\n\n                        <div className=\"bg-image w-100\">\n\n                            <img src={\"https://image.tmdb.org/t/p/w1280\" + movie.movie.backdrop_path}\n                                 alt={\"could not be loaded\"} className=\"img-responsive\" width=\"100%\"/>\n                        </div>\n                    </div>\n                </header>\n                <div className=\"container\">\n                    <Link to=\"/\" className=\"mb-5\">\n                        <i className=\"fa fa-arrow-left text-white\"></i>\n                    </Link>\n                    <div className=\"row\">\n                        <div className=\"col-6\">\n                            <img src={\"https://image.tmdb.org/t/p/w185\" + movie.movie.poster_path}/>\n                        </div>\n                        <div className=\"col-6\">\n                            <h3 className=\"text-white\">{movie.movie.original_title}</h3>\n                            <div className=\"row\">\n                                <div className=\"col-xs-6 overview mx-1\">\n                                    <Moment format=\"YYYY\">\n                                    {movie.movie.release_date}\n                                    </Moment>\n                                </div>\n                                <span className=\"overview mx-1\">&middot;</span>\n                                <div className=\"col-xs-6 overview mx-1\">\n                                    {movie.movie.popularity} % User Score\n                                </div>\n                            </div>\n                            <div className=\"col-xs-6 overview\">\n                                {/*<Moment format=\"h [hr] m [min]\">*/}\n                                    {movie.movie.runtime}\n                                    {/*{moment.duration(movie.movie.runtime, \"minutes\").format(\"h [hr] m [min]\")}*/}\n                                {/*</Moment>*/}\n                            </div>\n                        </div>\n                    </div>\n                    <div>\n                        <h3 className=\"font-weight-bold my-3 titles\">\n                            Overview\n                        </h3>\n                        <div className=\"overview\">\n                            {movie.movie.overview}\n                        </div>\n                    </div>\n\n                </div>\n            </>\n        );\n    }\n};\n\nexport default Lyrics;\n"]},"metadata":{},"sourceType":"module"}